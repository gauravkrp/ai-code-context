version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:16
    container_name: ai-code-context-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_code_context
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and task queue
  redis:
    image: redis:7
    container_name: ai-code-context-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Celery worker for async tasks
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-code-context-worker
    command: celery -A app.tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ai_code_context
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/app
      - ./chroma_db:/app/chroma_db

  # FastAPI backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-code-context-api
    restart: always
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ai_code_context
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/app
      - ./chroma_db:/app/chroma_db

volumes:
  postgres_data:
  redis_data: 